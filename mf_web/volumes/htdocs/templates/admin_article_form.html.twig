{% extends 'base.html.twig' %}

{% from 'macros/csrf_input.html.twig' import csrf %}
{% from 'macros/error_list.html.twig' import errorList %}

{% block title %}{{ formData ? 'Édition d’article' : 'Nouvel article' }}{% endblock %}

{% block resources %}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css">
<script src="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js"></script>
<script src="{{ app.getAsset('unsaved-changes.js') }}"></script>
{% endblock %}

{% block index %}<meta name="robots" content="noindex">{% endblock %}

{% block bodyContent %}

<h1>{{ formData ? 'Édition d’article' : 'Nouvel article' }}</h1>

<form autocomplete="on" class="std-form" id="article-form" enctype="multipart/form-data" method="post"{% if app.conf.dev %} novalidate{% endif %}>
    <div class="form-row">
        <label class="label" for="id">ID (généré automatiquement)</label>
        <input class="input" id="id" name="id"{% if formData %} value="{{ formData.id }}"{% endif %}>
        {% if formErrors %}{{ errorList( formErrors.id ?? null ) }}{% endif %}
    </div>    <div class="form-row">
        <label class="label" for="title">Titre</label>
        <input class="input" id="title" name="title" required{% if formData %} value="{{ formData.title }}"{% endif %}>
        {% if formErrors %}{{ errorList( formErrors.title ?? null ) }}{% endif %}
    </div>
    <div class="form-row">
        <label class="label" for="sub-title">Sous-titre</label>
        <input class="input" id="sub-title" name="sub_title"{% if formData %} value="{{ formData.sub_title }}"{% endif %}>
        {% if formErrors %}{{ errorList( formErrors.sub_title ?? null) }}{% endif %}
    </div>
    <div class="form-row">
        <label class="label" for="category-id">Catégorie</label>
        <select id="category-id" name="category_id" required>
            {% for c in categories %}
            <option value="{{ c.id }}"{% if formData and c.id == formData.category_id %} selected{% endif %}>{{ c.name }}</option>
            {% endfor %}
        </select>
        {% if formErrors %}{{ errorList( formErrors.category_id ?? null) }}{% endif %}
    </div>
    <div class="form-row -singleimage">
        <label class="label" for="cover-filename">Couverture</label>
        <input accept="image/*" class="input" id="cover-filename" name="cover_filename" type="file">
        {% if formData and formData.cover_filename %}
        <input name="cover_filename_previous" type="hidden" value="{{ formData.cover_filename }}">
        <p>Couverture actuelle : {{ formData.cover_filename }}.</p>
        <img class="image" {{ app.imgAttr('Couverture actuelle', formData.cover_filename, true, 300)|raw }}>
        {% endif %}
        {% if formErrors %}{{ errorList( formErrors.cover_filename ?? null) }}{% endif %}
    </div>
    <div class="form-row -singleimage">
        <label class="label" for="thumbnail-filename">Miniature</label>
        <input accept="image/*" class="input" id="thumbnail-filename" name="thumbnail_filename" type="file">
        {% if formData and formData.thumbnail_filename %}
        <input name="thumbnail_filename_previous" type="hidden" value="{{ formData.thumbnail_filename }}">
        <p>Miniature actuelle : {{ formData.thumbnail_filename }}.</p>
        <img class="image" {{ app.imgAttr('Miniature actuelle', formData.thumbnail_filename, true, 300)|raw }}>
        {% endif %}
        {% if formErrors %}{{ errorList( formErrors.thumbnail_filename ?? null) }}{% endif %}
    </div>
    <div class="form-row -checkbox">
        <input class="input" id="is-featured" name="is_featured" type="checkbox"{% if formData and formData.is_featured %} checked{% endif %}>
        <label class="label" for="is-featured">Mettre à la une</label>
        {% if formErrors %}{{ errorList( formErrors.is_featured ?? null) }}{% endif %}
    </div>
    <div class="form-row -checkbox">
        <input class="input" id="is-published" name="is_published" type="checkbox"{% if formData and formData.is_published %} checked{% endif %}>
        <label class="label" for="is-published">Publier</label>
        {% if formErrors %}{{ errorList( formErrors.is_published ?? null) }}{% endif %}
    </div>
    <div class="form-row">
        <label class="label" for="content">Contenu de l’article</label>
        <textarea class="input -textarea" id="content" name="body" required>{{ formData.body ?? null }}</textarea>
        {% if formErrors %}{{ errorList( formErrors.body ?? null) }}{% endif %}
    </div>
    
    {% if formData and formData.id %}
    <div class="form-row -checkbox">
        <input class="input" id="update-author" name="update_author" type="checkbox">
        <label class="label" for="update-author">Mettre « {{ app.session.currentMemberUsername }} » comme auteur</label>
        {% if formErrors %}{{ errorList( formErrors.is_featured ?? null) }}{% endif %}
    </div>
    {% endif %}

    <button class="std-button" id="submit-button" type="submit">Poster</button>
    {{ csrf(app) }}

    {% if requestedId %}
    <a class="std-button" href="{{ app.router.generateUrl('article', [requestedId]) }}">Visualiser l’article</a>
    {% endif %}
</form>
{% endblock %}

{% block scriptInit %}
<script>
{% if requestedId %}
const autosaveDateTimeKey = 'article-form-last-update-{{ requestedId }}';
const smdeCacheId = 'article-body-{{ requestedId }}';
{% else %}
const autosaveDateTimeKey = 'article-form-last-update';
const smdeCacheId = 'article-body';
{% endif %}

if ('' !== '{{ lastUpdateDateTimeUtc }}' && null !== localStorage.getItem(autosaveDateTimeKey)) {
    const lastUpdateDateTime = new Date({{ lastUpdateDateTimeUtc }});
    const autosaveDateTime = new Date(parseInt(localStorage.getItem(autosaveDateTimeKey)));
    if (lastUpdateDateTime > autosaveDateTime) {
        localStorage.removeItem(`smde_${smdeCacheId}`);
        localStorage.removeItem(autosaveDateTimeKey);
    }
}

var simplemde = new SimpleMDE({
    autosave: {
        enabled: true,
        delay: 5000,
        uniqueId: smdeCacheId,
    },
    element: document.getElementById("content"),
    spellChecker: false,
});

document.getElementById("content").required = false;

const changes = new UnsavedChanges('submit-button', 'article-form');
simplemde.codemirror.on('change', function() {
    changes.init();
});
simplemde.codemirror.on("change", function () {
    localStorage.setItem(autosaveDateTimeKey, Date.now());
});
</script>
{% endblock %}