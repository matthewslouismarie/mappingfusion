<?php

namespace MF\Model;

use DateTimeImmutable;
use MF\Enum\EntityConstraint;
use MF\Enum\ModelPropertyType;
use MF\Http\SessionManager;

/**
 * @todo Remove generator from here. Move it to the controller.
 */
class ArticleDefinition implements ModelDefinition
{
    public function __construct(
        private SessionManager $session,
    ) {
    }

    public function getName(): string {
        return 'article';
    }

    public function getProperties(): array {
        $session = $this->session;
        return [
            new ModelProperty(
                'id',
                ModelPropertyType::VARCHAR,
                autoGenerated: true,
                generator: fn($appArray) => (new Slug($appArray['title'], true))->__toString(),
                constraints: [EntityConstraint::ID_NOT_TAKEN],
            ),
            new ModelProperty('author_id', ModelPropertyType::VARCHAR, autoGenerated: true, generator: fn($appArray) => $session->getCurrentMemberUsername()),
            new ModelProperty('category_id', ModelPropertyType::VARCHAR),
            new ModelProperty('body', ModelPropertyType::TEXT),
            new ModelProperty('is_featured', ModelPropertyType::BOOL),
            new ModelProperty('title', ModelPropertyType::VARCHAR),
            new ModelProperty('cover_filename', ModelPropertyType::IMAGE),
            new ModelProperty('creation_date_time', ModelPropertyType::DATETIME, autoGenerated: true, generator: fn($appArray) => new DateTimeImmutable()),
            new ModelProperty('last_update_date_time', ModelPropertyType::DATETIME, autoGenerated: true, generator: fn() => new DateTimeImmutable()),
        ];
    }

    public function getStoredData(): array {
        return [
            'stored_review' => ReviewDefinition::class,
            'stored_playable' => PlayableDefinition::class,
        ];
    }
}